phases:
  - phase: Windows_Build
    queue: Hosted VS2017
    steps:
      - powershell: |
          invoke-restmethod -usebasicparsing 'https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe' -outfile 'rustup-init.exe'
          ./rustup-init.exe -y --default-toolchain nightly-x86_64-pc-windows-msvc --no-modify-path
          & "$env:USERPROFILE/.cargo/bin/rustup.exe" install nightly-x86_64-pc-windows-msvc
          remove-item rustup-init.exe
        displayName: Install Rust
      - powershell: |
          & "$env:USERPROFILE/.cargo/bin/cargo.exe" +nightly-x86_64-pc-windows-msvc test
        displayName: Run Tests
      - powershell: |
          & "$env:USERPROFILE/.cargo/bin/cargo.exe" +nightly-x86_64-pc-windows-msvc build --release
        displayName: Build Release
      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Release Build"
        inputs:
          PathtoPublish: ./target/release/gogo.exe
          ArtifactName: gogo-windows
          ArtifactType: Container

  - phase: Linux_Build
    queue: Hosted Linux Preview
    steps:
      - task: Docker@0
        inputs:
          detached: false
          containerregistrytype: 'Container Registry'
          dockerFile: '.docker/musl-linux.Dockerfile'
          imageName: 'gogo-musl'

      - task: Docker@0
        displayName: Build Application
        inputs:
          detached: false
          containerregistrytype: 'Container Registry'
          action: 'Run an image'
          imageName: 'gogo-musl'
          volumes: $(Build.SourcesDirectory):/build
          workDir: '/build'
          containerCommand: '/bin/musl-build.sh'

      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Release Build"
        inputs:
          PathtoPublish: ./target/x86_64-unknown-linux-musl/release/gogo
          ArtifactType: Container
          ArtifactName: gogo-linux
      - task: PublishBuildArtifacts@1
        displayName: "Publish Artifact: Release Toml"
        inputs:
          PathtoPublish: .release-manager.toml
          ArtifactType: Container
          ArtifactName: gogo-release-manager