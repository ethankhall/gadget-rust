trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - docs
      - version.properties
      - Cargo.toml
jobs:
  - job: Linux_Build
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: |
          set -e
          docker build -t gadget-server rust-applications
          docker build -t gadget-local-ui gadget-local-ui
      - task: Docker@2
        displayName: Login to ACR
        inputs:
          command: login
          containerRegistry: gadget-connection
      - script: |
          set -e
          mkdir ~/bin || true
          curl --location https://github.com/ethankhall/crom/releases/download/v0.2.2/crom-linux-musl.tar.gz | tar -xvz  -C ~/bin
          chmod +x ~/bin/crom
          ~/bin/crom tag-version --source local,github --ignore-changes

          VERSION=$(~/bin/crom get current-version --no-snapshot)

          docker tag gadget-server gadget.azurecr.io/gadget-server:$VERSION
          docker push gadget.azurecr.io/gadget-server:$VERSION
          docker tag gadget-local-ui gadget.azurecr.io/gadget-local-ui:$VERSION
          docker push gadget.azurecr.io/gadget-local-ui:$VERSION

          export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
          echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          sudo apt-get update && sudo apt-get install google-cloud-sdk
          echo $GCP_IMAGE_TOKEN | base64 -d  > ${HOME}/gcloud-service-key.json
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GCP_IMAGE_PROJECT}
          gcloud --quiet auth configure-docker

          docker tag gadget-server us.gcr.io/${GCP_IMAGE_PROJECT}/gadget-server:$VERSION
          docker push us.gcr.io/${GCP_IMAGE_PROJECT}/gadget-server:$VERSION

          docker tag gadget-local-ui us.gcr.io/${GCP_IMAGE_PROJECT}/gadget-local-ui:$VERSION
          docker push us.gcr.io/${GCP_IMAGE_PROJECT}/gadget-local-ui:$VERSION
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))